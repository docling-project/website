@use "sass:map";

@import "/src/styles/variables";
@import "~bootstrap/scss/mixins";

$sizes: (
  100: (
    font-size: 0.75rem,
    line-height: 1.5,
    li-margin-bottom: 0.375rem,
  ),
  200: (
    font-size: 0.875rem,
    line-height: 1.43,
    li-margin-bottom: 0.5rem,
  ),
  300: (
    font-size: 1rem,
    line-height: 1.5,
    li-margin-bottom: 0.5rem,
  ),
  400: (
    font-size: 1.125rem,
    line-height: 1.44,
    li-margin-bottom: 0.625rem,
  ),
  500: (
    font-size: 1.25rem,
    line-height: 1.6,
    li-margin-bottom: 0.75rem,
  ),
  600: (
    font-size: 1.5rem,
    line-height: 1.5,
    li-margin-bottom: 1rem,
  ),
  700: (
    font-size: 2rem,
    line-height: 1.31,
    li-margin-bottom: 1.25rem,
  ),
);

$mobile-sizes: (
  400: (
    font-size: map.get($sizes, 300, "font-size"),
    line-height: map.get($sizes, 300, "line-height"),
  ),
  500: (
    font-size: map.get($sizes, 400, "font-size"),
    line-height: map.get($sizes, 400, "line-height"),
  ),
);

.text {
  color: inherit;
  font-family: var(--2023-font-body);
  margin-bottom: 0;
  scroll-margin-top: calc(var(--header-height) + var(--announcement-height));

  $text: &;

  a {
    &,
    &:hover,
    &:visited {
      color: inherit;
      text-decoration: underline;
    }
  }

  p,
  ul {
    margin-bottom: 1em;

    &:last-child {
      margin-bottom: 0;
    }
  }

  ul {
    list-style: none;

    li {
      margin-bottom: 0.5em;
      position: relative;

      p {
        margin-bottom: 0px !important;
      }

      &::before {
        background: none;
        content: "\2022";
        position: absolute;
        display: inline-block;
        left: -1em;
        width: 1em;
      }
    }
  }

  img {
    max-width: 100%;
  }

  iframe {
    margin-bottom: var(--spacer-4);
  }

  // Sizes

  @each $size, $values in $sizes {
    &#{$text}--size-#{$size} {
      font-size: map.get($values, "font-size");
      line-height: map.get($values, "line-height");

      ul {
        li {
          margin-bottom: map.get($values, "li-margin-bottom");
        }
      }
    }
  }

  &.mobile-small {
    @include media-breakpoint-down(lg) {
      @each $size, $values in $mobile-sizes {
        &#{$text}--size-#{$size} {
          font-size: map.get($values, "font-size");
          line-height: map.get($values, "line-height");
        }
      }
    }
  }

  // font

  &--inter {
    font-family: var(--2023-font-inter);
  }

  &--chivo {
    font-family: var(--2023-font-chivo);
  }

  // Weights

  &--weight-300 {
    font-weight: 300;
  }

  &--weight-400 {
    font-weight: 400;
  }

  &--weight-600 {
    font-weight: 600;
  }

  &--weight-700 {
    font-weight: 700;
  }
}
